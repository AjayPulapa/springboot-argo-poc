name: CI/CD Pipeline - Build and Deploy Spring Boot to AKS

on:
  push:
    branches:
      - main  # Trigger pipeline when changes are pushed to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ 1. Checkout Code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ✅ 2. Set Up JDK 17 for Maven Build
      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # ✅ 3. Build the Spring Boot Application JAR
      - name: Build Spring Boot JAR
        run: mvn clean install -DskipTests

      # ✅ 4. Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ✅ 5. Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      # ✅ 6. Generate Unique Image Tag
      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

      # ✅ 7. Build and Push Docker Image to ACR
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/springboot-argo:${{ env.IMAGE_TAG }} .
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/springboot-argo:${{ env.IMAGE_TAG }}

      # ✅ 8. Update Kubernetes Deployment YAML with the New Image Tag
      - name: Update deployment.yml with new image tag
        run: |
          sed -i "s|image: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/springboot-argo:.*|image: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/springboot-argo:${{ env.IMAGE_TAG }}|g" k8s-manifests/deployment.yaml
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git commit -am "Updated deployment image to ${{ env.IMAGE_TAG }}"
          git push origin main

      # ✅ 9. Trigger ArgoCD Sync
      - name: Trigger ArgoCD Sync
        run: |
          curl -X POST http://argocd-server.<namespace>:8080/api/v1/applications/springboot-app/sync \
            -H "Authorization: Bearer ${{ secrets.ARGOCD_AUTH_TOKEN }}"
