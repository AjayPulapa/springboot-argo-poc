name: CI/CD Pipeline - Build and Deploy Spring Boot to AKS with ACR and ArgoCD (SSH)

on:
  push:
    branches:
      - main  # Trigger this pipeline on changes to the 'main' branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ✅ 2. Set up Java with JDK 17 for Maven
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # ✅ 3. Build the Spring Boot Application
      - name: Build Spring Boot JAR
        run: mvn clean install -DskipTests

      # ✅ 4. Log in to Azure CLI
      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ✅ 5. Log in to Azure Container Registry (ACR)
      - name: Log in to Azure Container Registry (ACR)
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      # ✅ 6. Build Docker Image and Push to ACR
      - name: Build Docker Image and Push to ACR
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/springboot-argo:${{ github.sha }} .
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/springboot-argo:${{ github.sha }}

      # ✅ 7. Update Kubernetes Deployment File with the New Image Tag
      - name: Update deployment.yaml with new image tag
        run: |
          sed -i "s|image: .*.azurecr.io/springboot-argo:.*|image: ${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/springboot-argo:${{ github.sha }}|g" k8s-manifests/deployment.yaml

      # ✅ 8. Commit and Push Changes Using SSH Authentication
      - name: Commit and Push Changes via SSH
        env:
          GH_SSH_KEY: ${{ secrets.GH_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$GH_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

          git config --global user.name "Ajay Pulapa"
          git config --global user.email "apulapa@miraclesoft.com"

          # Use SSH instead of HTTPS
          git remote set-url origin git@github.com:AjayPulapa/springboot-argo-poc.git

          # Add and commit changes if there are any
          git add k8s-manifests/deployment.yaml
          if git diff --cached --quiet; then
            echo "⚠️ No changes detected in deployment.yaml. Skipping commit."
          else
            git commit -m "Updated deployment image to ${{ github.sha }}"
            git push origin main
          fi

      # ✅ 9. Trigger ArgoCD Sync to Apply the New Deployment
      - name: Trigger ArgoCD Sync
        run: |
          curl -X POST "http://argocd-server.<namespace>:8080/api/v1/applications/springboot-app/sync" \
            -H "Authorization: Bearer ${{ secrets.ARGOCD_AUTH_TOKEN }}"  # ArgoCD API token
